// https://github.com/aurer/jsgradient
// @aurer Phil http://aurer.co.uk
function gradientSteps(t,r,n){var a=t=>3!==(t=t.replace("#","")).length&&6!==t.length?[255,255,255]:(3==t.length&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]),[parseInt(t.substr(0,2),16),parseInt(t.substr(2,2),16),parseInt(t.substr(4,2),16)]),e=(t,r)=>(r-=t.toString().length)<=0?t:new Array(r+(/\./.test(t)?2:1)).join("0")+t,h=t=>(t[0]=t[0]>255?255:t[0]<0?0:t[0],t[1]=t[1]>255?255:t[1]<0?0:t[1],t[2]=t[2]>255?255:t[2]<0?0:t[2],e(t[0].toString(16),2)+e(t[1].toString(16),2)+e(t[2].toString(16),2)),p=[];t=a(t),r=a(r),n-=1,rStep=(Math.max(t[0],r[0])-Math.min(t[0],r[0]))/n,gStep=(Math.max(t[1],r[1])-Math.min(t[1],r[1]))/n,bStep=(Math.max(t[2],r[2])-Math.min(t[2],r[2]))/n,p.push("#"+h(t));for(var s=t[0],u=t[1],S=t[2],o=0;o<n-1;o++)s=t[0]<r[0]?s+Math.round(rStep):s-Math.round(rStep),u=t[1]<r[1]?u+Math.round(gStep):u-Math.round(gStep),S=t[2]<r[2]?S+Math.round(bStep):S-Math.round(bStep),p.push("#"+h([s,u,S]));return p.push("#"+h(r)),p}